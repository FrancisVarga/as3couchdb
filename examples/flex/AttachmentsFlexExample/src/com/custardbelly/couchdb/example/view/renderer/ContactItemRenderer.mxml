<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				width="100%" height="35"
				autoDrawBackground="true">
	
	<fx:Metadata>
		[Event(name="edit", type="com.custardbelly.couchdb.example.event.ContactEvent")]
		[Event(name="delete", type="com.custardbelly.couchdb.example.event.ContactEvent")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.custardbelly.as3couchdb.core.CouchAttachment;
			import com.custardbelly.as3couchdb.enum.CouchContentType;
			import com.custardbelly.couchdb.example.event.ContactEvent;
			import com.custardbelly.couchdb.example.model.ContactDocument;
			
			import flash.utils.getQualifiedClassName;
			
			protected var _data:ContactDocument;
			
			protected function findIconAttachment():CouchAttachment
			{
				var attachment:CouchAttachment;
				for each( attachment in _data.attachments )
				{
					if( attachment.contentType == CouchContentType.JPEG || attachment.contentType == CouchContentType.PNG )
					{
						return attachment;
					}
				}
				return null;
			}
			
			protected function invalidateData():void
			{
				if( _data == null ) return;
				
				if( _data.attachments != null && _data.attachments.length > 0 )
				{
					var attachment:CouchAttachment = findIconAttachment();
					if( attachment )
					{
						var loader:Loader = new Loader();
						loader.contentLoaderInfo.addEventListener(Event.COMPLETE, handleIconLoadComplete);
						loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, handleLoadError);
						loader.load( new URLRequest( attachment.url ) );
					}
				}
			}
			
			protected function handleIconLoadComplete( evt:Event ):void
			{
				var info:LoaderInfo = ( evt.target as LoaderInfo );
				info.removeEventListener( Event.COMPLETE, handleIconLoadComplete );
				userImage.source = info.content as Bitmap;
			}
			
			protected function handleLoadError( evt:IOErrorEvent ):void
			{
				trace( "[" + getQualifiedClassName(this) + "] IOErrorEvent:: " + evt.text );
			}
			
			protected function handleEdit():void
			{
				dispatchEvent( new ContactEvent( ContactEvent.EDIT, _data ) );
			}
			
			protected function handleDelete():void
			{
				dispatchEvent( new ContactEvent( ContactEvent.DELETE, _data ) );
			}
			
			[Bindable]
			override public function get data():Object
			{
				return _data;
			}
			override public function set data( value:Object ):void
			{
				_data = value as ContactDocument;
				super.data = value;
				invalidateData();
			}
			
		]]>
	</fx:Script>
	
	<fx:Binding source="data.lastName+', '+data.firstName" destination="nameField.text" />
	
	<s:layout>
		<s:HorizontalLayout verticalAlign="middle" paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5" />
	</s:layout>
	
	<!-- User Icon -->
	<s:BitmapImage id="userImage"
				   width="30" height="30"
				   source="@Embed(source='images/no_icon.png')" 
				   />
	<!-- User Info -->
	<s:Label id="nameField" width="100%" />
	<!-- Tools -->
	<s:HGroup right="0">
		<s:Group width="16" height="16"
				 buttonMode="true" useHandCursor="true" 
				 click="handleDelete();">
			<s:BitmapImage source="@Embed('assets/user_delete.png')" />
		</s:Group>
		<s:Group width="16" height="16" 
				 buttonMode="true" useHandCursor="true" 
				 click="handleEdit();">
			<s:BitmapImage source="@Embed('assets/user_edit.png')" />
		</s:Group>
	</s:HGroup>
	
</s:ItemRenderer>
